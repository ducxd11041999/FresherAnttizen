[{"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\index.js":"1","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\serviceWorker.js":"2","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\App\\index.js":"3","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\LoadingPage\\index.js":"4","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\App\\Style.js":"5","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\Notifications\\index.js":"6","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\ReadCamera\\index.js":"7","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\FormInfor\\index.js":"8","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\utils\\Call_api.js":"9","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\utils\\getdoor.js":"10","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\LoadingPage\\Style.js":"11","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\commons\\theme\\index.js":"12","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\FormInfor\\Style.js":"13","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\ReadCamera\\Style.js":"14","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\ReadCamera\\readCam.js":"15","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\Dialog\\index.js":"16","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\constants\\config.js":"17","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\Dialog\\Style.js":"18","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\ReadCamera\\Setting.js":"19","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\FormInfor\\testkeyboard.js":"20"},{"size":505,"mtime":1606055287693,"results":"21","hashOfConfig":"22"},{"size":5227,"mtime":1606055287694,"results":"23","hashOfConfig":"22"},{"size":11825,"mtime":1609724206871,"results":"24","hashOfConfig":"22"},{"size":535,"mtime":1606055287687,"results":"25","hashOfConfig":"22"},{"size":440,"mtime":1606055287681,"results":"26","hashOfConfig":"22"},{"size":2031,"mtime":1606055287688,"results":"27","hashOfConfig":"22"},{"size":726,"mtime":1609486626106,"results":"28","hashOfConfig":"22"},{"size":13607,"mtime":1609650177317,"results":"29","hashOfConfig":"22"},{"size":1257,"mtime":1609041021733,"results":"30","hashOfConfig":"22"},{"size":835,"mtime":1609041448631,"results":"31","hashOfConfig":"22"},{"size":221,"mtime":1606055287687,"results":"32","hashOfConfig":"22"},{"size":488,"mtime":1606055287680,"results":"33","hashOfConfig":"22"},{"size":862,"mtime":1606055287684,"results":"34","hashOfConfig":"22"},{"size":424,"mtime":1606055287689,"results":"35","hashOfConfig":"22"},{"size":2510,"mtime":1609003729324,"results":"36","hashOfConfig":"22"},{"size":3218,"mtime":1606055287683,"results":"37","hashOfConfig":"22"},{"size":104,"mtime":1609231608974,"results":"38","hashOfConfig":"22"},{"size":862,"mtime":1606055287683,"results":"39","hashOfConfig":"22"},{"size":125,"mtime":1606055287689,"results":"40","hashOfConfig":"22"},{"size":550,"mtime":1609498478238,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1aw0os",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\index.js",[],["85","86"],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\serviceWorker.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\App\\index.js",["87","88"],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\LoadingPage\\index.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\App\\Style.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\Notifications\\index.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\ReadCamera\\index.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\FormInfor\\index.js",["89","90","91","92","93"],"import React, { Component } from 'react';\r\nimport { render } from \"react-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { withStyles } from '@material-ui/core';\r\nimport styles from './Style'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport 'simple-keyboard/build/css/index.css';\r\nfunction corrector(value) {\r\n    console.log(`correction ${value}`);\r\n    this.makeCorrection(value);\r\n}\r\nclass FormDialog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapper = React.createRef();\r\n        this.state = {\r\n            open: false,\r\n            name: '',\r\n            ages: '',\r\n            heath_dtls: '',\r\n            gender: false,\r\n            cough: false,\r\n            headache: false,\r\n            breath: false,\r\n            tangent: false,\r\n            travel: false,\r\n            fever: false,\r\n            tire:false,\r\n            flagChange: false,\r\n            layoutName: \"default\",\r\n            value: \"\",\r\n            open2: false \r\n        };\r\n    }\r\n    onClearData = () =>{\r\n        this.setState ({\r\n            open: false,\r\n            name: '',\r\n            ages: '0',\r\n            heath_dtls: '',\r\n            gender: false,\r\n            cough: false,\r\n            headache: false,\r\n            breath: false,\r\n            tangent: false,\r\n            flagChange: false\r\n        });\r\n        this.handleClose();\r\n    }\r\n    handleClose = () => {\r\n        this.props.onCloseForm();\r\n    };\r\n    onChange =(event)=>\r\n    {\r\n        var target = event.target\r\n        var name = target.name\r\n        var value = target.value\r\n        this.props.onChangeFlag(true)\r\n        //console.log(name + \" \" + value)\r\n        //console.log(typeof value)\r\n        if (name ==='cough' || name === 'breath' || name === 'headache' || name === 'tangent')\r\n        {\r\n            value = (value === \"true\" ? true : false);\r\n        }\r\n        this.setState(\r\n            {\r\n                [name]:value\r\n            })\r\n    }\r\n    onSubmit = (event) =>{\r\n        //console.log(\"submit\")\r\n        event.preventDefault();\r\n        this.props.onInformation(this.state)\r\n        this.onClearData();\r\n    }\r\n\r\n    onInputChanged = (data) => {\r\n        this.setState({ input: data });\r\n    }\r\n    onInputSubmitted = (data) => {\r\n        console.log(\"Input submitted:\", data);\r\n    }\r\n    canOpenKeyboard = () => {\r\n        return true;\r\n    }\r\n \r\n    handleFocus = () =>{\r\n        if(this.canOpenKeyboard()) {\r\n            this.setState({ open2: true });\r\n        }\r\n    }\r\n    \r\n    handleChange= (value) => {\r\n        console.log(value);\r\n        this.setState({ value: value });\r\n    }\r\n    \r\n    handleRequestClose= () => {\r\n        this.setState({ open2: false });\r\n    }\r\n    \r\n    handleInput= (input) => {\r\n        console.log(input);\r\n        var name = 'name'\r\n        this.setState(\r\n            {\r\n                [name]: input\r\n            })\r\n    }\r\n    \r\n    handleError = (error) => {\r\n        let errorText;\r\n        switch (error) {\r\n            case 'required':\r\n                errorText = 'This field is required';\r\n                break;\r\n            case 'invalidSymbol':\r\n                errorText = 'You are tring to enter none number symbol';\r\n                break;\r\n            case 'incompleteNumber':\r\n                errorText = 'Number is incomplete';\r\n                break;\r\n            case 'singleMinus':\r\n                errorText = 'Minus can be use only for negativity';\r\n                break;\r\n            case 'singleFloatingPoint':\r\n                errorText = 'There is already a floating point';\r\n                break;\r\n            case 'singleZero':\r\n                errorText = 'Floating point is expected';\r\n                break;\r\n            case 'min':\r\n                errorText = 'You are tring to enter number less than -10';\r\n                break;\r\n            case 'max':\r\n                errorText = 'You are tring to enter number greater than 12';\r\n                break;\r\n        }\r\n        this.setState({ errorText: errorText });\r\n    }\r\n    \r\n    handleValid= (value) => {\r\n        console.debug(`valid ${value}`);\r\n    }\r\n \r\n    // componentDidMount() {\r\n    //     setTimeout(() => this.setState({ value: '89' }), 1000);\r\n    // }\r\n    onChange2 = (input) => {\r\n        //console.log(\"Input changed\", input);\r\n        this.setState(\r\n            {\r\n                name:input\r\n            })\r\n    }\r\n    \r\n    onKeyPress = (button) => {\r\n        console.log(\"Button pressed\", button);\r\n    }\r\n    render(){\r\n        const {openForm, classes} = this.props\r\n        // let Keyboard = new Keyboard\r\n    return (\r\n        <div>\r\n            <Dialog open={openForm} onClose={this.handleClose}  \r\n            aria-labelledby=\"form-dialog-title\" \r\n            fullWidth = {true}\r\n            className = {classes.root}>\r\n                <form className={classes.root} autoComplete=\"off\">\r\n                    <DialogTitle id=\"form-dialog-title\" >\r\n                        <div className={classes.formTitleSize}>\r\n                            KHAI BÁO Y TẾ\r\n                        </div>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText className = {classes.formContentSize}>\r\n                            Vui lòng điền thông tin cá nhân của bạn trong 14 ngày gần đây và chắc chắn thông tin bạn cung cấp hoàn toàn chính xác\r\n                        </DialogContentText>\r\n                                <TextField\r\n                                    variant = \"filled\"\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    name=\"name\"\r\n                                    label=\"Họ & Tên\"\r\n                                    type=\"text\"\r\n                                    value = {this.state.name}\r\n                                    fullWidth = {true}\r\n                                    onChange = {this.onChange}\r\n                                    inputProps={{\r\n                                        style: {fontSize: \"15px\"} \r\n                                    }}\r\n                                    InputLabelProps={{style: {fontSize: \"15px\"}}} // font size of input label\r\n                                    required           \r\n                                />\r\n                                {/* <Keyboard\r\n                                    name='name'\r\n                                    onChange={input =>this.onChange2(input)}\r\n                                    onKeyPress={button => this.onKeyPress(button)}  \r\n                                /> */}\r\n                                <TextField\r\n                                    variant = \"filled\"\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    name=\"ages\"\r\n                                    type=\"text\"\r\n                                    label =\"Số điện thoại\"\r\n                                    value = {this.state.ages}\r\n                                    onChange = {this.onChange}\r\n                                    inputProps={{\r\n                                        style: {fontSize: \"15px\"} \r\n                                    }}\r\n                                    InputLabelProps={{style: {fontSize: \"15px\"}}} // font size of input label\r\n                                    fullWidth\r\n                                    required\r\n                                />\r\n                        <span className = {classes.pl10} style={{ fontSize: '15px', color : \"red\" }}>Giới tính</span>\r\n                        <br />\r\n                        <RadioGroup aria-label=\"gender\" \r\n                            name=\"gender\" value={this.state.gender}\r\n                            onChange={this.onChange} \r\n                            required\r\n                            className = {classes.pl10}\r\n                        >\r\n                            <FormControlLabel value= \"false\" \r\n                                checked ={this.state.gender === \"false\"} \r\n                                control={<Radio />} \r\n                                label={<span style={{ fontSize: '15px' }}>Nữ</span>}\r\n                            />\r\n                            <FormControlLabel value=\"true\" \r\n                                checked ={this.state.gender === \"true\"} control={<Radio />} \r\n                                label={<span style={{ fontSize: '15px' }}>Nam</span>} \r\n                            />\r\n                        </RadioGroup>\r\n                        <span className = {classes.pl10} style={{ fontSize: '15px', color : \"red\" }}>Bạn có các trường hợp sau?</span>\r\n                        <br />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox />\r\n                            }\r\n                            name=\"cough\" \r\n                            onChange={this.onChange}\r\n                            className = {classes.pl10}\r\n                            value = {!this.state.cough}\r\n                            label={<span style={{ fontSize: '15px' }}>Ho khan</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox />\r\n                            }\r\n                            name=\"headache\" \r\n                            onChange={this.onChange}\r\n                            className = {classes.pl10}\r\n                            value = {!this.state.headache}\r\n                            label={<span style={{ fontSize: '15px' }}>Nhứt đầu</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox />\r\n                            }\r\n                            name=\"breath\" \r\n                            onChange={this.onChange}\r\n                            className = {classes.pl10}\r\n                            value = {!this.state.breath}\r\n                            label={<span style={{ fontSize: '15px' }}>Khó thở</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox />\r\n                            }\r\n                            name=\"tire\" \r\n                            onChange={this.onChange}\r\n                            className = {classes.pl10}\r\n                            value = {!this.state.tire}\r\n                            label={<span style={{ fontSize: '15px' }}>Mệt mõi</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox />\r\n                            }\r\n                            name=\"fever\" \r\n                            onChange={this.onChange}\r\n                            className = {classes.pl10}\r\n                            value = {!this.state.fever}\r\n                            label={<span style={{ fontSize: '15px' }}>Sốt</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox />\r\n                            }\r\n                            name=\"tangent\" \r\n                            onChange={this.onChange}\r\n                            className = {classes.pl10}\r\n                            value = {!this.state.tangent}\r\n                            label={<span style={{ fontSize: '15px' }}>Tiếp xúc với bệnh nhân</span>}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox />\r\n                            }\r\n                            name=\"travel\" \r\n                            onChange={this.onChange}\r\n                            className = {classes.pl10}\r\n                            value = {!this.state.travel}\r\n                            label={<span style={{ fontSize: '15px' }}>Đã từng di chuyển qua nơi có dịch</span>}\r\n                        />\r\n                        <br /> \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant = \"contained\" type=\"reset\"  className = {classes.zoomButton} onClick={this.onClearData} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant = \"contained\" type=\"submit\"  className = {classes.zoomButton} color=\"secondary\"  onClick={e => this.onSubmit(e)}>\r\n                            Submit\r\n                        </Button>\r\n                    </DialogActions>\r\n                    </form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(FormDialog)","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\utils\\Call_api.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\utils\\getdoor.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\LoadingPage\\Style.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\commons\\theme\\index.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\FormInfor\\Style.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\ReadCamera\\Style.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\ReadCamera\\readCam.js",["94","95"],"import Webcam from \"react-webcam\";\r\nimport React, {useEffect} from 'react'\r\nimport videoConstraints from './Setting'\r\n\r\n//import Button from '@material-ui/core/Button';\r\n// import callApi from './../../utils/Call_api'\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Style'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nWebcamCapture.propTypes = {\r\n  onCap: PropTypes.func,\r\n};\r\n\r\nWebcamCapture.defaultProps = {\r\n  onCap: null,\r\n};\r\n\r\nfunction WebcamCapture(props) {\r\n    const webcamRef = React.useRef(null);\r\n    const [imgSrc, setImgSrc] = React.useState(null);\r\n    // const [replay, setReplay] = React.useState(false);\r\n    const {onCap, onImageResult, onBlock} = props;\r\n    const capture = React.useCallback(() => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        setImgSrc(imageSrc);\r\n        var json = (`{ \"img\": ${JSON.stringify(imageSrc)}}`);\r\n        var body = JSON.parse(json)\r\n        // callApi('/json', 'POST', body).then(res => {\r\n        //   onCap(res.data)\r\n        // })\r\n        onCap(body)\r\n        \r\n    }, [webcamRef, onCap]);\r\n    //console.log(typeof imgSrc)\r\n    useEffect(() => {\r\n      //console.log(onBlock)\r\n      if(!onBlock){\r\n      const interval = setInterval(() => {\r\n            //console.log(\"captured\");\r\n            capture();\r\n          }, 2000);\r\n          return () => clearInterval(interval);\r\n      }\r\n    }, [capture, onBlock]);\r\n    const replayImage = React.useCallback(() =>{\r\n      if(onImageResult){\r\n        let imageObj = \"data:image/webp;base64,\" + onImageResult;\r\n        return (<div>\r\n                  <img\r\n                    src={imageObj}\r\n                    alt = \"Không load được ảnh\"\r\n                    width=\"1300\"\r\n                    height = \"650\"\r\n                  />\r\n              </div>\r\n        )\r\n      }else{\r\n        return(\r\n            <Webcam\r\n              audio={false}\r\n              ref={webcamRef}\r\n              minScreenshotHeight\t={props.deviceH}\r\n              minScreenshotWidth={props.deviceW}\r\n              screenshotFormat=\"image/png\"\r\n              videoConstraints={videoConstraints}\r\n            >\r\n          </Webcam>\r\n        )\r\n      }\r\n    },[onImageResult])\r\n    return (\r\n      <div>\r\n        {replayImage()}\r\n        {/* <Button variant=\"contained\" onClick={capture}\r\n            color = 'secondary' className = {classes.btnCapture}>Check In\r\n        </Button> */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default  withStyles(styles)(WebcamCapture);","C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\Dialog\\index.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\constants\\config.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\Dialog\\Style.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\ReadCamera\\Setting.js",[],"C:\\Users\\17520\\Desktop\\FresherAnttizen\\clientReactJs\\src\\components\\FormInfor\\testkeyboard.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":12,"column":8,"nodeType":"102","messageId":"103","endLine":12,"endColumn":12},{"ruleId":"100","severity":1,"message":"104","line":248,"column":13,"nodeType":"102","messageId":"103","endLine":248,"endColumn":19},{"ruleId":"100","severity":1,"message":"105","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"106","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":16},{"ruleId":"100","severity":1,"message":"107","line":16,"column":8,"nodeType":"102","messageId":"103","endLine":16,"endColumn":16},{"ruleId":"100","severity":1,"message":"108","line":18,"column":10,"nodeType":"102","messageId":"103","endLine":18,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":124,"column":9,"nodeType":"111","messageId":"112","endLine":149,"endColumn":10},{"ruleId":"100","severity":1,"message":"113","line":20,"column":12,"nodeType":"102","messageId":"103","endLine":20,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":70,"column":7,"nodeType":"116","endLine":70,"endColumn":22,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Demo' is defined but never used.","Identifier","unusedVar","'status' is assigned a value but never used.","'Component' is defined but never used.","'render' is defined but never used.","'Keyboard' is defined but never used.","'corrector' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'imgSrc' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has missing dependencies: 'props.deviceH' and 'props.deviceW'. Either include them or remove the dependency array.","ArrayExpression",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [onImageResult, props.deviceH, props.deviceW]",{"range":"123","text":"124"},[2194,2209],"[onImageResult, props.deviceH, props.deviceW]"]